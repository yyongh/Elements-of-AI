## BUILDING AI - GETTING STARTED WITH AI - HILL CLIMBING
## Exercise 3: Reach the highest summit
## Intermediate
import math
import random             	# just for generating random mountains                                 	 

# generate random mountains                                                                               	 
w = [random.random()/3, random.random()/3, random.random()/3]
h = [1.+math.sin(1+x/6.)*w[0]+math.sin(-.3+x/9.)*w[1]+math.sin(-.2+x/30.)*w[2] for x in range(100)]
h[0] = 0.0; h[99] = 0.0

def climb(x, h):
    # keep climbing until we've found a summit
    summit = False

    # edit here
    while not summit:
        summit = True         # stop unless there's a way up
        if h[x + 1] > h[x] and h[x + 1]:
            x = x + 1         # right is higher, go there
            summit = False    # and keep going 
        elif h[x - 1] > h[x]:
            x = x - 1
            summit = False
    return x


def main(h):

    # start at a random place                                                                                  	 
    x0 = random.randint(1, 98)
    x = climb(x0, h)

    print("Venla started at %d and got to %d" % (x0, x))
    return x0, x

main(h)

## Advanced
import math
import random             	# just for generating random mountains                                 	 

# generate random mountains                                                                               	 

w = [.05, random.random()/3, random.random()/3]
h = [1.+math.sin(1+x/.6)*w[0]+math.sin(-.3+x/9.)*w[1]+math.sin(-.2+x/30.)*w[2] for x in range(100)]

def climb(x, h):
    # keep climbing until we've found a summit
    summit = False

    # edit here
    while not summit:
        summit = True         # stop unless there's a way up
        
        for i in range(0, 5):
            for j in range(0, 5):
                if h[x + i] > h[x] and h[x + 1]:
                    x = x + i         # right is higher, go there
                    summit = False    # and keep going 
                elif h[x - j] > h[x]:
                    x = x - j
                    summit = False
        # More elegant solution
        # for x_new in range(max(0, x-5), min(99, x+5)):
        #     if h[x_new] > h[x]:
        #         x = x_new         # here is higher, go here 
        #         summit = False    # and keep going
    return x

def main(h):
    # start at a random place                                                                                  	 
    x0 = random.randint(1, 98)
    x = climb(x0, h)

    # print("Venla started at %d and got to %d" % (x0, x))
    return x0, x

main(h)
