## BUILDING AI - MACHINE LEARNING - LINEAR REGRESSION
## Exercise 14: Training data vs test data
## Intermediate
import numpy as np

def main():
    np.set_printoptions(precision=1)    # this just changes the output settings for easier reading
    x_train = np.array(
        [
            [25, 2, 50, 1, 500], 
            [39, 3, 10, 1, 1000], 
            [13, 2, 13, 1, 1000], 
            [82, 5, 20, 2, 120], 
            [130, 6, 10, 2, 600],
            [115, 6, 10, 1, 550 ]
        ]
    )   
    
    y_train = np.array([127900, 222100, 143750, 268000, 460700, 407000])

    # add the feature data for the two new cabins here. note: don't include the price data
    x_test = np.array(
        [
            [36, 3, 15, 1, 850],
            [75, 5, 18, 2, 540]
        ]
    )

    c = np.linalg.lstsq(x_train, y_train, rcond=-1)[0]

    # this will print the predicted prices for the six cabins in the training data
    # change this so that it predicts the prices of the two new cabins that are not
    # included in the training set

    #print(x_train @ c)
    print(x_test @ c)

main()


## Advanced *fails test
import numpy as np
from io import StringIO


train_string = '''
25 2 50 1 500 127900
39 3 10 1 1000 222100
13 2 13 1 1000 143750
82 5 20 2 120 268000
130 6 10 2 600 460700
115 6 10 1 550 407000
'''

test_string = '''
36 3 15 1 850 196000
75 5 18 2 540 290000
'''

train_string = StringIO(train_string)
test_string = StringIO(test_string)

def main():
    np.set_printoptions(precision=1)    # this just changes the output settings for easier reading
    
    # Please write your code inside this function

    # read in the training data and separate it to x_train and y_train
    lines_train = train_string.read().splitlines()
    x_train = []
    y_train = []
    for i in range(1, len(lines_train)):
        xi = [int(j) for j in lines_train[i].split()]
        yi = xi.pop()
        x_train.append(xi)
        y_train.append(yi)
    x_train = np.asarray(x_train)
    y_train = np.asarray(y_train)
    #print(x_train)
    #print(y_train)

    # fit a linear regression model to the data and get the coefficients
    # c = np.asarray([])
    c = np.linalg.lstsq(x_train, y_train)[0]

    # read in the test data and separate x_test from it
    # x_test = np.asarray([])
    lines_test = test_string.read().splitlines()
    x_test = []
    y_test = []
    for i in range(1, len(lines_test)):
        xi = [int(j) for j in lines_test[i].split()]
        yi = xi.pop()
        x_test.append(xi)
        y_test.append(yi)
    x_test = np.asarray(x_test)
    #y_test = np.asarray(y_test)
    #print(x_test)
    #print(y_test)

    # print out the linear regression coefficients
    print(c)

    # this will print out the predicted prics for the two new cabins in the test data set
    print(x_test @ c)

main()
